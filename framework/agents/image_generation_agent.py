from aiogram.types import Message
from framework.models.image_generation.stable_diffusion import StableDiffusionHandler
import logging
import asyncio

logger = logging.getLogger(__name__)

class ImageGenerationAgent:
    def __init__(self, bot, model_id: str = "D:\\SD3\\Data\\Models\\StableDiffusion\\waiNSFWIllustrious_v110.safetensors"):
        """Initialize the image generation agent.
        
        Args:
            bot: The Telegram bot instance
            model_id (str): –ü—É—Ç—å –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –º–æ–¥–µ–ª–∏ –∏–ª–∏ ID –º–æ–¥–µ–ª–∏ —Å Hugging Face
        """
        self.bot = bot
        self.sd_handler = StableDiffusionHandler(model_id)
        
    async def handle_generate_command(self, message: Message):
        """Handle the /generate command.
        
        Args:
            message (Message): The Telegram message
        """
        try:
            # Get the prompt from the message
            prompt = message.text.replace("/generate", "").strip()
            
            if not prompt:
                await message.answer(
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /generate\n"
                    "–ù–∞–ø—Ä–∏–º–µ—Ä: /generate –∫—Ä–∞—Å–∏–≤–∞—è –∫–æ—à–∫–∞ –Ω–∞ –∑–∞–∫–∞—Ç–µ"
                )
                return
            
            # Send "generating" message
            status_message = await message.answer("üé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.")
            
            try:
                # Generate the image in a separate thread to avoid blocking
                image_bytes = await asyncio.get_event_loop().run_in_executor(
                    None,
                    self.sd_handler.generate_image,
                    prompt
                )
                
                # Send the generated image
                await message.answer_photo(
                    photo=image_bytes,
                    caption=f"üé® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É: {prompt}"
                )
                
            except Exception as e:
                logger.error(f"Error generating image: {str(e)}")
                await message.answer(
                    "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. "
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å."
                )
            finally:
                # Delete the status message
                await status_message.delete()
            
        except Exception as e:
            logger.error(f"Error in handle_generate_command: {str(e)}")
            await message.answer(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã. "
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            ) 